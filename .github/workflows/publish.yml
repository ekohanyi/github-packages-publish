# This workflow
# - grabs change logs made from merged PR
# - grabs the version bump type from that log
# - calls Lerna publish with that version bump type, lerna pushes tags to github
# - grabs the newly pushed tags from master
# - creates releases from change logs based on those pushed tags

name: Publish

# Action runs on all pushes to master
# if the push is not a merged commit for some reason, the pipeline will fail
on:
  push:
    branches: [master]

env:
  BUCKET_NAME: good-ui-static-assets
  NODE_VERSION: 13.3.0
  NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

jobs:
  install:
    name: Install Node Dependencies
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@master
        with:
          node-version: ${{ env.NODE_VERSION }}
      - name: Restore Cache
        uses: actions/cache@master
        with:
          path: |
            node_modules
            */*/node_modules
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: Install
        run: yarn

  Publish:
    name: Grab Change Log from GCP
    runs-on: ubuntu-latest
    needs: [install]
    steps:
      - uses: actions/checkout@v2
      - name: Get commit ID
        uses: ./.github/actions/get-feature-commit # Uses an action in the root directory
        id: commit
      - run: echo "${{ steps.commit.outputs.commit_hash }}"
      - uses: GoogleCloudPlatform/github-actions/setup-gcloud@master
        with:
          version: "285.0.0"
          project_id: "good-ui"
          service_account_email: ${{ secrets.GCP_SA_EMAIL }}
          service_account_key: ${{ secrets.GCP_SA_KEY }}
          export_default_credentials: true
      - name: GCP download
        run: |
          gsutil cp gs://$BUCKET_NAME/changeLogs/${{ steps.commit.outputs.commit_hash }}/log.json .
      - uses: actions/checkout@v2
        with:
          # pulls all commits (needed for lerna / semantic release to correctly version)
          fetch-depth: "0"
      # pulls all tags (needed for lerna / semantic release to correctly version)
      - run: git fetch --depth=1 origin +refs/tags/*:refs/tags/*
      - name: Configure CI Git User
        run: |
          git config --global user.name 'ekohanyi'
          git config --global user.email 'emmajk2012@gmail.com'
          git remote set-url origin https://$GITHUB_ACTOR:$GITHUB_TOKEN@github.com/ekohanyi/github-packages-publish
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - uses: actions/setup-node@master
        with:
          node-version: 13.3.0
          registry-url: https://npm.pkg.github.com/
          scope: "@ekohanyi"
      - name: Restore Cache
        id: cache-node-modules
        uses: actions/cache@master
        with:
          path: |
            node_modules
            */*/node_modules
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: Install
        if: steps.cache-node-modules.outputs.cache-hit != 'true'
        run: yarn
      - name: Build
        run: yarn build
      - name: Get version
        id: version
        run: |
          value=$(cat ./log.json | jq -r .bump)
          echo The result is $value
          echo ::set-output name=version::${value}
      - name: Publish to GitHub Package Registry
        run: |
          git reset --hard master
          yarn lerna publish ${{ steps.version.outputs.version }} \
          --registry "https://npm.pkg.github.com/" \
          --yes \
          --canary \ # temporary for now in case this gets run accidentally 
          --no-verify-access \
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - uses: actions/checkout@v2
        with:
          # pulls all commits (needed for lerna / semantic release to correctly version)
          fetch-depth: "0"
          ref: "master"
      - run: git fetch --depth=1 origin
      - name: Configure CI Git User
        run: |
          git config --global user.name 'ekohanyi'
          git config --global user.email 'emmajk2012@gmail.com'
          git remote set-url origin https://$GITHUB_ACTOR:$GITHUB_TOKEN@github.com/ekohanyi/github-packages-publish
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Get pushed tags
        id: get_tags
        run: |
          commit=$(echo `git log --format="%H" -n 1`)
          echo $commit
          all_tags=$(git ls-remote --tags | grep $commit)
          array=($(echo $all_tags))
          tags=()
          for (( index=1; index<${#array[@]}; index+=2 )); do
            tag=${array[index]#"refs/tags/"}
            tag=${tag%"^{}"}
            tags+=("${tag}")
          done
          stringTags=$( IFS=$', '; echo "${tags[*]}" )
          echo ::set-output name=tags::${stringTags}
      - name: Read log.json
        id: log
        uses: juliangruber/read-file-action@v1
        with:
          path: ./log.json
      - name: Push release descriptions
        uses: ./.github/actions/update-release # Uses an action in the root directory
        id: release
        with:
          tags: ${{ steps.get_tags.outputs.tags }}
          token: ${{ secrets.GITHUB_TOKEN }}
          changes: ${{ steps.log.outputs.content }}
